from numpy import *

def loadDataSet()://加载数据并处理成两个列表
    dataMat=[];lablMat=[]
    fr=open('testSet.txt')
    for line in fr.readlines():
        lineArr=line.strip().split()
        dataMat.append([1.0,float(lineArr[0]),float(lineArr[1])])
        lablMat.append(int(lineArr[2]))
    return dataMat,lablMat

def sigmoid(inX)://sigmoid函数
    return 1.0/(1+exp(-inX))

def gradAscent(dataMatIn,classLabels)://梯度下降法
    dataMatrix=mat(dataMatIn)
    labelMat=mat(classLabels).transpose()
    m,n=shape(dataMatrix)
    alpha=0.001
    maxCycles=500
    weights=ones((n,1))
    for k in range(maxCycles):
        h=sigmoid(dataMatrix*weights)
        error=(labelMat-h)
        weights=weights+alpha*dataMatrix.transpose()*error
    return weights

def sample()://便利函数
    dataArr,labelMat=loadDataSet()
    print(gradAscent(dataArr,labelMat))

if __name__=='__main__'://main()
    sample()

